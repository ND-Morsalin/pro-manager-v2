model PurchasedHistory {
  id             String                    @id @default(auto()) @map("_id") @db.ObjectId
  shopOwnerId    String                    @db.ObjectId
  shopOwner      ShopOwner                 @relation(fields: [shopOwnerId], references: [id], onDelete: Cascade)
  due            Float                     @default(0) // how much due 
  paid           Float                     @default(0) // total paid
  cost           Float                     @default(0) // labour cost
  totalPrice     Float                     @default(0) // how much is purchased price paid + due 
  discountType   DiscountType              @default(FLAT)
  discountAmount Float                     @default(0)
  paymentType    PaymentType               @default(CASH)
  supplierId     String                    @db.ObjectId
  supplier       Supplier                  @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  products       PurchasedHistoryProduct[] // Relation to the join table

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PurchasedHistoryProduct {
  id                 String           @id @default(auto()) @map("_id") @db.ObjectId
  purchasedHistoryId String           @db.ObjectId
  purchasedHistory   PurchasedHistory @relation(fields: [purchasedHistoryId], references: [id], onDelete: Cascade)
  productId          String           @db.ObjectId
  inventory          Inventory?       @relation(fields: [inventoryId], references: [id])
  inventoryId        String?          @db.ObjectId
  product            Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
}
