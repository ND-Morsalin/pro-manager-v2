
model ProductGive {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  shopOwnerId String  @db.ObjectId
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   String  @db.ObjectId

  // customer    Customer          @relation(fields: [customerId], references: [id])
  // customerId  String            @db.ObjectId
  amount      Float
  reason      String
  quantity    String?
  status      ReceiveGiveStatus @default(HANDOVER_TO_CUSTOMER)
  companyName String?
  note        String?
}

model ProductReceive {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  shopOwnerId String            @db.ObjectId
  product     Product           @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   String            @db.ObjectId
  // customerId  String?            @db.ObjectId
  // customer    Customer          @relation(fields: [customerId], references: [id])
  amount      Float
  reason      String
  quantity    String?
  status      ReceiveGiveStatus @default(RECEIVE_FROM_CUSTOMER)
  companyName String?
  note        String?
}

enum ReceiveGiveStatus {
  RECEIVE_FROM_CUSTOMER
  HANDOVER_TO_CUSTOMER
  PRODUCT_ON_SHOP
  PRODUCT_ON_SUPPLIER
}
